// Autogenerated by Nightwatch
// Refer to the online docs for more details: https://nightwatchjs.org/gettingstarted/configuration/
const Services = {}; loadServices();

//  _   _  _         _      _                     _          _
// | \ | |(_)       | |    | |                   | |        | |
// |  \| | _   __ _ | |__  | |_ __      __  __ _ | |_   ___ | |__
// | . ` || | / _` || '_ \ | __|\ \ /\ / / / _` || __| / __|| '_ \
// | |\  || || (_| || | | || |_  \ V  V / | (_| || |_ | (__ | | | |
// \_| \_/|_| \__, ||_| |_| \__|  \_/\_/   \__,_| \__| \___||_| |_|
//             __/ |
//            |___/

module.exports = {
  // An array of folders (excluding subfolders) where your tests are located;
  // if this is not specified, the test source must be passed as the second argument to the test runner.
  src_folders: <%- src_folders %>,

  // See https://nightwatchjs.org/guide/working-with-page-objects/
  page_objects_path: <%- page_objects_path %>,

  // See https://nightwatchjs.org/guide/extending-nightwatch/#writing-custom-commands
  custom_commands_path: <%- custom_commands_path %>,

  // See https://nightwatchjs.org/guide/extending-nightwatch/#writing-custom-assertions
  custom_assertions_path: '',
  <% if (plugins) { %>
  plugins: <%- plugins %>,
  <% } %>
  // See https://nightwatchjs.org/guide/#external-globals
  globals_path: '',

  webdriver: {},

  test_settings: {
    default: {
      disable_error_log: false,
      launch_url: '<%- answers.baseUrl %>',

      screenshots: {
        enabled: false,
        path: 'screens',
        on_failure: true
      },

      desiredCapabilities: {
        browserName: '<%- answers.defaultBrowser %>'
      },
      <% if (answers.backend !== 'remote') { %>
      webdriver: {
        start_process: true,
        server_path: ''
      },
      <% } %><% if (answers.runner === 'cucumber') { %>
      test_runner: {
        // set cucumber as the runner
        // For more info on using CucumberJS with Nightwatch, visit:
        // https://nightwatchjs.org/guide/third-party-runners/cucumberjs-nightwatch-integration.html
        type: 'cucumber',

        // define cucumber specific options
        options: {
          //set the feature path
          feature_path: '<%- answers.featurePath %>',

          // start the webdriver session automatically (enabled by default)
          // auto_start_session: true

          // use parallel execution in Cucumber
          // parallel: 2 // set number of workers to use (can also be defined in the cli as --parallel 2
        }
      }<% } else if (answers.runner === 'mocha') { %>
      test_runner: {
        // set mocha as the runner
        // For more info on using Mocha with Nightwatch, visit:
        // https://nightwatchjs.org/guide/third-party-runners/using-mocha.html
        type: 'mocha',

        // define mocha specific options
        options : {
          ui: 'bdd',
          reporter: 'list'
        }
      }<% } %>
    },
    <% if (answers.backend !== 'remote') { %><% if (answers.browsers.includes('safari')) { %>
    safari: {
      desiredCapabilities: {
        browserName: 'safari',
        alwaysMatch: {
          acceptInsecureCerts: false
        }
      },
      webdriver: {
        start_process: true,
        server_path: ''
      }
    },
    <% } %><% if (answers.browsers.includes('firefox')) { %>
    firefox: {
      desiredCapabilities: {
        browserName: 'firefox',
        alwaysMatch: {
          acceptInsecureCerts: true,
          'moz:firefoxOptions': {
            args: [
              // '-headless',
              // '-verbose'
            ]
          }
        }
      },
      webdriver: {
        start_process: true,
        server_path: '',
        cli_args: [
          // very verbose geckodriver logs
          // '-vv'
        ]
      }
    },
    <% } %><% if (answers.browsers.includes('chrome')) { %>
    chrome: {
      desiredCapabilities: {
        browserName: 'chrome',
        'goog:chromeOptions': {
          // More info on Chromedriver: https://sites.google.com/a/chromium.org/chromedriver/
          //
          // w3c:false tells Chromedriver to run using the legacy JSONWire protocol (not required in Chrome 78)
          w3c: true,
          args: [
            //'--no-sandbox',
            //'--ignore-certificate-errors',
            //'--allow-insecure-localhost',
            //'--headless'
          ]
        }
      },

      webdriver: {
        start_process: true,
        server_path: '',
        cli_args: [
          // --verbose
        ]
      }
    },
    <% } %><% if (answers.browsers.includes('edge')) { %>
    edge: {
      desiredCapabilities: {
        browserName: 'MicrosoftEdge',
        'ms:edgeOptions': {
          w3c: true,
          // More info on EdgeDriver: https://docs.microsoft.com/en-us/microsoft-edge/webdriver-chromium/capabilities-edge-options
          args: [
            //'--headless'
          ]
        }
      },

      webdriver: {
        start_process: true,
        // Follow https://docs.microsoft.com/en-us/microsoft-edge/webdriver-chromium/?tabs=c-sharp#download-microsoft-edge-webdriver
        // to download the Edge WebDriver and set the location of extracted `msedgedriver` below:
        server_path: '',
        cli_args: [
          // --verbose
        ]
      }
    },
    <% }} %><% if (answers.browserstack) { %>
    //////////////////////////////////////////////////////////////////////////////////
    // Configuration for using the browserstack.com cloud service                    |
    //                                                                               |
    // Please set the username and access key by setting the environment variables:  |
    // - BROWSERSTACK_USER                                                           |
    // - BROWSERSTACK_KEY                                                            |
    // .env files are supported                                                      |
    //////////////////////////////////////////////////////////////////////////////////
    browserstack: {
      selenium: {
        host: '<%- answers.hostname %>',
        port: <%- answers.port %>
      },
      // More info on configuring capabilities can be found on:
      // https://www.browserstack.com/automate/capabilities?tag=selenium-4
      desiredCapabilities: {
        'bstack:options': {
          userName: '${BROWSERSTACK_USER}',
          accessKey: '${BROWSERSTACK_KEY}',
        }
      },

      disable_error_log: true,
      webdriver: {
        timeout_options: {
          timeout: 15000,
          retry_attempts: 3
        },
        keep_alive: true,
        start_process: false
      }
    },

    'browserstack.local': {
      extends: 'browserstack',
      desiredCapabilities: {
        'browserstack.local': true
      }
    },
    <% if (answers.remoteBrowsers.includes('chrome')) { %>
    'browserstack.chrome': {
      extends: 'browserstack',
      desiredCapabilities: {
        browserName: 'chrome',
        chromeOptions: {
          w3c: true
        }
      }
    },
    <% } %><% if (answers.remoteBrowsers.includes('firefox')) { %>
    'browserstack.firefox': {
      extends: 'browserstack',
      desiredCapabilities: {
        browserName: 'firefox'
      }
    },
    <% } %><% if (answers.remoteBrowsers.includes('ie')) { %>
    'browserstack.ie': {
      extends: 'browserstack',
      desiredCapabilities: {
        browserName: 'internet explorer',
        browserVersion: '11.0'
      }
    },
    <% } %><% if (answers.remoteBrowsers.includes('safari')) { %>
    'browserstack.safari': {
      extends: 'browserstack',
      desiredCapabilities: {
        browserName: 'safari'
      }
    },
    <% } %><% if (answers.remoteBrowsers.includes('chrome')) { %>
    'browserstack.local_chrome': {
      extends: 'browserstack.local',
      desiredCapabilities: {
        browserName: 'chrome'
      }
    },
    <% } %><% if (answers.remoteBrowsers.includes('firefox')) { %>
    'browserstack.local_firefox': {
      extends: 'browserstack.local',
      desiredCapabilities: {
        browserName: 'firefox'
      }
    },
    <% }} else if (['remote', 'both'].includes(answers.backend)) { %>
    /////////////////////////////////////////////////////////////////////////////////////////////
    // Configuration for using remote Selenium service or a cloud-based testing provider.       |
    //                                                                                          |
    // If you are using cloud providers such as BrowserStack, CrossBrowserTesting, LambdaTests, |
    // or SauceLabs, please set the username and access key by setting the below environment    |
    // variables:                                                                               |
    // - REMOTE_USERNAME                                                                        |
    // - REMOTE_ACCESS_KEY                                                                      |
    // (.env files are supported)                                                               |
    /////////////////////////////////////////////////////////////////////////////////////////////
    <%- answers.remoteName %>: {
      // Info on all the available options with "selenium":
      // https://nightwatchjs.org/guide/configuration/settings.html#selenium-server-settings
      selenium: {
        start_process: false,
        server_path: '',
        host: '<%- answers.hostname %>',
        port: <%- answers.port %>
      },

      // username: '${REMOTE_USERNAME}',
      // access_key: '${REMOTE_ACCESS_KEY}',

      webdriver: {
        keep_alive: true,
        start_process: false
      }
    },
    <% if (answers.remoteBrowsers.includes('chrome')) { %>
    '<%- answers.remoteName %>.chrome': {
      extends: '<%- answers.remoteName %>',
      desiredCapabilities: {
        browserName: 'chrome',
        chromeOptions: {
          w3c: true
        }
      }
    },
    <% } %><% if (answers.remoteBrowsers.includes('firefox')) { %>
    '<%- answers.remoteName %>.firefox': {
      extends: '<%- answers.remoteName %>',
      desiredCapabilities: {
        browserName: 'firefox',
        'moz:firefoxOptions': {
          args: [
            // '-headless',
            // '-verbose'
          ]
        }
      }
    },
    <% } %><% if (answers.remoteBrowsers.includes('safari')) { %>
    '<%- answers.remoteName %>.safari': {
      extends: '<%- answers.remoteName %>',
      desiredCapabilities: {
        browserName: 'safari'
      }
    },
    <% } %><% if (answers.remoteBrowsers.includes('edge')) { %>
    '<%- answers.remoteName %>.edge': {
      extends: '<%- answers.remoteName %>',
      desiredCapabilities: {
        browserName: 'MicrosoftEdge'
      }
    },
    <% } %><% if (answers.remoteBrowsers.includes('ie')) { %>
    '<%- answers.remoteName %>.ie': {
      extends: '<%- answers.remoteName %>',
      desiredCapabilities: {
        browserName: 'internet explorer',
        browserVersion: '11.0'
      }
    },
    <% }} %><% if (answers.seleniumServer) { %>
    //////////////////////////////////////////////////////////////////////////////////
    // Configuration for when using the Selenium service, either locally or remote,  |
    //  like Selenium Grid                                                           |
    //////////////////////////////////////////////////////////////////////////////////
    selenium_server: {
      // Selenium Server is running locally and is managed by Nightwatch
      // More info on setting up Selenium Server locally:
      // https://nightwatchjs.org/guide/getting-started/installation.html#install-selenium-server
      selenium: {
        start_process: true,
        port: 4444,
        server_path: '', // Leave empty if @nightwatch/selenium-server is installed
        command: 'standalone', // Selenium 4 only
        cli_args: {
          // 'webdriver.gecko.driver': '',
          // 'webdriver.chrome.driver': '',
          // 'webdriver.edge.driver': './path/to/msedgedriver',
          // 'webdriver.ie.driver': ''
        }
      },
      webdriver: {
        start_process: false,
        default_path_prefix: '/wd/hub'
      }
    },
    <% if (answers.browsers.includes('chrome')) { %>
    'selenium.chrome': {
      extends: 'selenium_server',
      desiredCapabilities: {
        browserName: 'chrome',
        chromeOptions: {
          w3c: true
        }
      }
    },
    <% } %><% if (answers.browsers.includes('firefox')) { %>
    'selenium.firefox': {
      extends: 'selenium_server',
      desiredCapabilities: {
        browserName: 'firefox',
        'moz:firefoxOptions': {
          args: [
            // '-headless',
            // '-verbose'
          ]
        }
      }
    },
    <% } %><% if (answers.browsers.includes('edge')) { %>
    'selenium.edge': {
      extends: 'selenium_server',
      "desiredCapabilities": {
        "browserName": "MicrosoftEdge",
        "ms:edgeOptions": {
          "w3c": true,
          "args": [
            //"--headless"
          ]
        },
        "acceptSslCerts": true
      },
    },
    <% } %><% if (answers.browsers.includes('ie')) { %>
    'selenium.ie': {
      extends: 'selenium_server',
      desiredCapabilities: {
        browserName: 'internet explorer',
        browserVersion: '11.0'
      }
    }<% }} %>
  }
};

function loadServices() {
  try {
    Services.seleniumServer = require('selenium-server');
  } catch (err) {}

  try {
    Services.chromedriver = require('chromedriver');
  } catch (err) {}

  try {
    Services.geckodriver = require('geckodriver');
  } catch (err) {}
  <% if (answers.browsers && answers.browsers.includes('ie')) { %>
  try {
    Services.iedriver = require('iedriver');
  } catch (err) {}
  <% } %>
}
